From 99acff4d8e7c3de0d67e67ab70e62657d4af9f8e Mon Sep 17 00:00:00 2001
From: Grigory Vasilyev <h0tc0d3@gmail.com>
Date: Sun, 11 Feb 2024 12:16:10 +0300
Subject: [PATCH] Rebase patches

---
 ...t-for-hiding-wine-version-informatio.patch | 22 ++++----
 ...ing-of-GetMessage-after-previous-Pee.patch | 51 ++++++++++---------
 ...ignal-thread-until-it-is-really-gone.patch | 29 +++++------
 3 files changed, 50 insertions(+), 52 deletions(-)

diff --git a/patches/ntdll-Hide_Wine_Exports/0001-ntdll-Add-support-for-hiding-wine-version-informatio.patch b/patches/ntdll-Hide_Wine_Exports/0001-ntdll-Add-support-for-hiding-wine-version-informatio.patch
index e42ab5d1b8c1..212f1649b9c6 100644
--- a/patches/ntdll-Hide_Wine_Exports/0001-ntdll-Add-support-for-hiding-wine-version-informatio.patch
+++ b/patches/ntdll-Hide_Wine_Exports/0001-ntdll-Add-support-for-hiding-wine-version-informatio.patch
@@ -9,13 +9,14 @@ Subject: [PATCH] ntdll: Add support for hiding wine version information from
  dlls/ntdll/ntdll_misc.h |  5 +++
  2 files changed, 103 insertions(+), 1 deletion(-)
 
+
 diff --git a/dlls/ntdll/loader.c b/dlls/ntdll/loader.c
-index 8e2b3282a75..5cb6b48e7ae 100644
+index 2720cdb861d2..ac27367ddb5e 100644
 --- a/dlls/ntdll/loader.c
 +++ b/dlls/ntdll/loader.c
-@@ -88,6 +88,9 @@ const WCHAR system_dir[] = L"C:\\windows\\system32\\";
+@@ -91,6 +91,9 @@ const WCHAR system_dir[] = L"C:\\windows\\system32\\";
  /* system search path */
- static const WCHAR system_path[] = L"C:\\windows\\system32;C:\\windows\\system;C:\\windows";
+ static const WCHAR system_path[] = L"C:\\windows\\system32;C:\\windows\\system;C:\\windows;C:\\Program Files (x86)\\Steam";
  
 +#define IS_OPTION_TRUE(ch) ((ch) == 'y' || (ch) == 'Y' || (ch) == 't' || (ch) == 'T' || (ch) == '1')
 +
@@ -23,7 +24,7 @@ index 8e2b3282a75..5cb6b48e7ae 100644
  static BOOL is_prefix_bootstrap;  /* are we bootstrapping the prefix? */
  static BOOL imports_fixup_done = FALSE;  /* set once the imports have been fixed up, before attaching them */
  static BOOL process_detaching = FALSE;  /* set on process detach to avoid deadlocks with thread detach */
-@@ -107,6 +110,8 @@ struct dll_dir_entry
+@@ -110,6 +113,8 @@ struct dll_dir_entry
  
  static struct list dll_dir_list = LIST_INIT( dll_dir_list );  /* extra dirs from LdrAddDllDirectory */
  
@@ -32,7 +33,7 @@ index 8e2b3282a75..5cb6b48e7ae 100644
  struct ldr_notification
  {
      struct list                    entry;
-@@ -1978,6 +1983,96 @@ NTSTATUS WINAPI LdrUnlockLoaderLock( ULONG flags, ULONG_PTR magic )
+@@ -1999,6 +2004,96 @@ NTSTATUS WINAPI LdrUnlockLoaderLock( ULONG flags, ULONG_PTR magic )
  }
  
  
@@ -129,7 +130,7 @@ index 8e2b3282a75..5cb6b48e7ae 100644
  /******************************************************************
   *		LdrGetProcedureAddress  (NTDLL.@)
   */
-@@ -1997,7 +2092,7 @@ NTSTATUS WINAPI LdrGetProcedureAddress(HMODULE module, const ANSI_STRING *name,
+@@ -2019,7 +2114,7 @@ NTSTATUS WINAPI LdrGetProcedureAddress(HMODULE module, const ANSI_STRING *name,
      {
          void *proc = name ? find_named_export( module, exports, exp_size, name->Buffer, -1, NULL )
                            : find_ordinal_export( module, exports, exp_size, ord - exports->Base, NULL );
@@ -138,7 +139,7 @@ index 8e2b3282a75..5cb6b48e7ae 100644
          {
              *address = proc;
              ret = STATUS_SUCCESS;
-@@ -2235,6 +2330,8 @@ static void build_ntdll_module( HMODULE module )
+@@ -2299,6 +2394,8 @@ static void build_ntdll_module(void)
      wm->ldr.Flags &= ~LDR_DONT_RESOLVE_REFS;
      node_ntdll = wm->ldr.DdagNode;
      if (TRACE_ON(relay)) RELAY_SetupDLL( module );
@@ -148,10 +149,10 @@ index 8e2b3282a75..5cb6b48e7ae 100644
  
  
 diff --git a/dlls/ntdll/ntdll_misc.h b/dlls/ntdll/ntdll_misc.h
-index 8801c518039..78ff79625ea 100644
+index a7967a6c2429..f445500963f9 100644
 --- a/dlls/ntdll/ntdll_misc.h
 +++ b/dlls/ntdll/ntdll_misc.h
-@@ -153,6 +153,11 @@ static inline TEB64 *NtCurrentTeb64(void) { return (TEB64 *)NtCurrentTeb()->GdiB
+@@ -121,6 +121,11 @@ static inline TEB64 *NtCurrentTeb64(void) { return (TEB64 *)NtCurrentTeb()->GdiB
  
  NTSTATUS WINAPI RtlHashUnicodeString(PCUNICODE_STRING,BOOLEAN,ULONG,ULONG*);
  
@@ -163,6 +164,3 @@ index 8801c518039..78ff79625ea 100644
  /* convert from straight ASCII to Unicode without depending on the current codepage */
  static inline void ascii_to_unicode( WCHAR *dst, const char *src, size_t len )
  {
--- 
-2.38.1
-
diff --git a/patches/server-PeekMessage/0001-server-Fix-handling-of-GetMessage-after-previous-Pee.patch b/patches/server-PeekMessage/0001-server-Fix-handling-of-GetMessage-after-previous-Pee.patch
index 93a8aeef32d3..e7820e5b9f37 100644
--- a/patches/server-PeekMessage/0001-server-Fix-handling-of-GetMessage-after-previous-Pee.patch
+++ b/patches/server-PeekMessage/0001-server-Fix-handling-of-GetMessage-after-previous-Pee.patch
@@ -15,7 +15,7 @@ Changes in v3:
  2 files changed, 65 insertions(+), 17 deletions(-)
 
 diff --git a/dlls/user32/tests/msg.c b/dlls/user32/tests/msg.c
-index 0059afcbac7..cf01e156458 100644
+index bb7b74558c43..5fc8a89900c1 100644
 --- a/dlls/user32/tests/msg.c
 +++ b/dlls/user32/tests/msg.c
 @@ -14113,13 +14113,10 @@ static void test_PeekMessage3(void)
@@ -93,26 +93,26 @@ index 0059afcbac7..cf01e156458 100644
       * because both messages are in the same queue. */
  
 diff --git a/server/queue.c b/server/queue.c
-index 9007438e082..1d7a31a318a 100644
+index 5d56101892ed..7dd2bd74ca5c 100644
 --- a/server/queue.c
 +++ b/server/queue.c
-@@ -142,6 +142,7 @@ struct msg_queue
+@@ -145,6 +145,7 @@ struct msg_queue
      struct hook_table     *hooks;           /* hook table */
      timeout_t              last_get_msg;    /* time of last get message call */
      int                    keystate_lock;   /* owns an input keystate lock */
 +    unsigned int           ignore_post_msg; /* ignore post messages newer than this unique id */
+     unsigned int           fsync_idx;
+     int                    fsync_in_msgwait; /* our thread is currently waiting on us */
  };
- 
- struct hotkey
-@@ -310,6 +311,7 @@ static struct msg_queue *create_msg_queue( struct thread *thread, struct thread_
+@@ -318,6 +319,7 @@ static struct msg_queue *create_msg_queue( struct thread *thread, struct thread_
          queue->hooks           = NULL;
          queue->last_get_msg    = current_time;
          queue->keystate_lock   = 0;
 +        queue->ignore_post_msg = 0;
+         queue->fsync_idx       = 0;
+         queue->fsync_in_msgwait = 0;
          list_init( &queue->send_result );
-         list_init( &queue->callback_result );
-         list_init( &queue->pending_timers );
-@@ -643,13 +645,21 @@ static inline struct msg_queue *get_current_queue(void)
+@@ -663,13 +665,21 @@ static inline struct msg_queue *get_current_queue(void)
  }
  
  /* get a (pseudo-)unique id to tag hardware messages */
@@ -135,7 +135,7 @@ index 9007438e082..1d7a31a318a 100644
  /* try to merge a WM_MOUSEMOVE message with the last in the list; return 1 if successful */
  static int merge_mousemove( struct thread_input *input, const struct message *msg )
  {
-@@ -960,7 +970,7 @@ static int match_window( user_handle_t win, user_handle_t msg_win )
+@@ -990,7 +1000,7 @@ static int match_window( user_handle_t win, user_handle_t msg_win )
  }
  
  /* retrieve a posted message */
@@ -144,7 +144,7 @@ index 9007438e082..1d7a31a318a 100644
                                 unsigned int first, unsigned int last, unsigned int flags,
                                 struct get_message_reply *reply )
  {
-@@ -971,6 +981,7 @@ static int get_posted_message( struct msg_queue *queue, user_handle_t win,
+@@ -1001,6 +1011,7 @@ static int get_posted_message( struct msg_queue *queue, user_handle_t win,
      {
          if (!match_window( win, msg->win )) continue;
          if (!check_msg_filter( msg->msg, first, last )) continue;
@@ -152,7 +152,7 @@ index 9007438e082..1d7a31a318a 100644
          goto found; /* found one */
      }
      return 0;
-@@ -1585,6 +1596,7 @@ found:
+@@ -1627,6 +1638,7 @@ found:
      msg->msg       = WM_HOTKEY;
      msg->wparam    = hotkey->id;
      msg->lparam    = ((hotkey->vkey & 0xffff) << 16) | modifiers;
@@ -160,7 +160,7 @@ index 9007438e082..1d7a31a318a 100644
  
      free( msg->data );
      msg->data      = NULL;
-@@ -2276,7 +2288,7 @@ static int get_hardware_message( struct thread *thread, unsigned int hw_id, user
+@@ -2326,7 +2338,7 @@ static int get_hardware_message( struct thread *thread, unsigned int hw_id, user
          }
  
          /* now we can return it */
@@ -169,7 +169,7 @@ index 9007438e082..1d7a31a318a 100644
          reply->type   = MSG_HARDWARE;
          reply->win    = win;
          reply->msg    = msg_code;
-@@ -2382,6 +2394,7 @@ void post_message( user_handle_t win, unsigned int message, lparam_t wparam, lpa
+@@ -2433,6 +2445,7 @@ void post_message( user_handle_t win, unsigned int message, lparam_t wparam, lpa
          msg->result    = NULL;
          msg->data      = NULL;
          msg->data_size = 0;
@@ -177,7 +177,7 @@ index 9007438e082..1d7a31a318a 100644
  
          get_message_defaults( thread->queue, &msg->x, &msg->y, &msg->time );
  
-@@ -2626,6 +2639,7 @@ DECL_HANDLER(send_message)
+@@ -2681,6 +2694,7 @@ DECL_HANDLER(send_message)
              set_queue_bits( recv_queue, QS_SENDMESSAGE );
              break;
          case MSG_POSTED:
@@ -185,7 +185,7 @@ index 9007438e082..1d7a31a318a 100644
              list_add_tail( &recv_queue->msg_list[POST_MESSAGE], &msg->entry );
              set_queue_bits( recv_queue, QS_POSTMESSAGE|QS_ALLPOSTMESSAGE );
              if (msg->msg == WM_HOTKEY)
-@@ -2744,12 +2758,12 @@ DECL_HANDLER(get_message)
+@@ -2799,12 +2813,12 @@ DECL_HANDLER(get_message)
  
      /* then check for posted messages */
      if ((filter & QS_POSTMESSAGE) &&
@@ -200,7 +200,7 @@ index 9007438e082..1d7a31a318a 100644
          return;
  
      /* only check for quit messages if not posted messages pending */
-@@ -2760,7 +2774,7 @@ DECL_HANDLER(get_message)
+@@ -2815,7 +2829,7 @@ DECL_HANDLER(get_message)
      if ((filter & QS_INPUT) &&
          filter_contains_hw_range( req->get_first, req->get_last ) &&
          get_hardware_message( current, req->hw_id, get_win, req->get_first, req->get_last, req->flags, reply ))
@@ -209,7 +209,7 @@ index 9007438e082..1d7a31a318a 100644
  
      /* check for any internal driver message */
      if (get_hardware_message( current, req->hw_id, get_win, WM_WINE_FIRST_DRIVER_MSG,
-@@ -2778,7 +2792,7 @@ DECL_HANDLER(get_message)
+@@ -2833,7 +2847,7 @@ DECL_HANDLER(get_message)
          reply->wparam = 0;
          reply->lparam = 0;
          get_message_defaults( queue, &reply->x, &reply->y, &reply->time );
@@ -218,7 +218,7 @@ index 9007438e082..1d7a31a318a 100644
      }
  
      /* now check for timer */
-@@ -2794,13 +2808,30 @@ DECL_HANDLER(get_message)
+@@ -2849,9 +2863,19 @@ DECL_HANDLER(get_message)
          get_message_defaults( queue, &reply->x, &reply->y, &reply->time );
          if (!(req->flags & PM_NOYIELD) && current->process->idle_event)
              set_event( current->process->idle_event );
@@ -239,7 +239,10 @@ index 9007438e082..1d7a31a318a 100644
      if (get_win == -1 && current->process->idle_event) set_event( current->process->idle_event );
      queue->wake_mask = req->wake_mask;
      queue->changed_mask = req->changed_mask;
-     set_error( STATUS_PENDING );  /* FIXME */
+@@ -2859,7 +2883,16 @@ DECL_HANDLER(get_message)
+
+     if (do_fsync() && !is_signaled( queue ))
+         fsync_clear( &queue->obj );
 +    return;
 +
 +found_msg:
@@ -247,10 +250,13 @@ index 9007438e082..1d7a31a318a 100644
 +        queue->ignore_post_msg = 0;
 +    else if (!queue->ignore_post_msg)
 +        queue->ignore_post_msg = get_unique_post_id();
+
++    if (do_fsync() && !is_signaled( queue ))
++        fsync_clear( &queue->obj );
  }
  
  
-@@ -2818,7 +2849,10 @@ DECL_HANDLER(reply_message)
+@@ -2877,7 +2910,10 @@ DECL_HANDLER(reply_message)
  DECL_HANDLER(accept_hardware_message)
  {
      if (current->queue)
@@ -261,6 +267,3 @@ index 9007438e082..1d7a31a318a 100644
      else
          set_error( STATUS_ACCESS_DENIED );
  }
--- 
-2.43.0
-
diff --git a/patches/server-Signal_Thread/0001-server-Do-not-signal-thread-until-it-is-really-gone.patch b/patches/server-Signal_Thread/0001-server-Do-not-signal-thread-until-it-is-really-gone.patch
index 88f446383482..c27c2fcd4883 100644
--- a/patches/server-Signal_Thread/0001-server-Do-not-signal-thread-until-it-is-really-gone.patch
+++ b/patches/server-Signal_Thread/0001-server-Do-not-signal-thread-until-it-is-really-gone.patch
@@ -27,10 +27,10 @@ Signed-off-by: Gabriel Ivăncescu <gabrielopcode@gmail.com>
  2 files changed, 30 insertions(+), 3 deletions(-)
 
 diff --git a/server/thread.c b/server/thread.c
-index 55386192fe6..60cd4ee16a8 100644
+index 8d8cb8185f12..4e2a8377c39c 100644
 --- a/server/thread.c
 +++ b/server/thread.c
-@@ -241,6 +241,7 @@ static inline void init_thread_structure( struct thread *thread )
+@@ -252,6 +252,7 @@ static inline void init_thread_structure( struct thread *thread )
      thread->token           = NULL;
      thread->desc            = NULL;
      thread->desc_len        = 0;
@@ -38,15 +38,15 @@ index 55386192fe6..60cd4ee16a8 100644
  
      thread->creation_time = current_time;
      thread->exit_time     = 0;
-@@ -431,6 +432,7 @@ static void destroy_thread( struct object *obj )
+@@ -463,6 +464,7 @@ static void destroy_thread( struct object *obj )
      list_remove( &thread->entry );
      cleanup_thread( thread );
      release_object( thread->process );
 +    if (thread->exit_poll) remove_timeout_user( thread->exit_poll );
      if (thread->id) free_ptid( thread->id );
      if (thread->token) release_object( thread->token );
- }
-@@ -455,7 +457,7 @@ static struct object_type *thread_get_type( struct object *obj )
+     if (thread->locked_completion) release_object( thread->locked_completion );
+@@ -487,7 +489,7 @@ static void dump_thread( struct object *obj, int verbose )
  static int thread_signaled( struct object *obj, struct wait_queue_entry *entry )
  {
      struct thread *mythread = (struct thread *)obj;
@@ -54,8 +54,8 @@ index 55386192fe6..60cd4ee16a8 100644
 +    return mythread->state == TERMINATED && !mythread->exit_poll;
  }
  
- static unsigned int thread_map_access( struct object *obj, unsigned int access )
-@@ -1249,6 +1251,26 @@ int thread_get_inflight_fd( struct thread *thread, int client )
+ static unsigned int thread_get_fsync_idx( struct object *obj, enum fsync_type *type )
+@@ -1307,6 +1309,26 @@ int thread_get_inflight_fd( struct thread *thread, int client )
      return -1;
  }
  
@@ -82,10 +82,10 @@ index 55386192fe6..60cd4ee16a8 100644
  /* kill a thread on the spot */
  void kill_thread( struct thread *thread, int violent_death )
  {
-@@ -1268,8 +1290,12 @@ void kill_thread( struct thread *thread, int violent_death )
-     }
-     kill_console_processes( thread, 0 );
+@@ -1328,8 +1350,12 @@ void kill_thread( struct thread *thread, int violent_death )
      abandon_mutexes( thread );
+     if (do_fsync())
+         fsync_abandon_mutexes( thread );
 -    wake_up( &thread->obj, 0 );
 -    if (violent_death) send_thread_signal( thread, SIGQUIT );
 +    if (violent_death)
@@ -98,17 +98,14 @@ index 55386192fe6..60cd4ee16a8 100644
      remove_process_thread( thread->process, thread );
      release_object( thread );
 diff --git a/server/thread.h b/server/thread.h
-index 184fa92d250..077ab0929ba 100644
+index bb2d1a1075ef..502942ab4671 100644
 --- a/server/thread.h
 +++ b/server/thread.h
-@@ -90,6 +90,7 @@ struct thread
-     struct list            kernel_object; /* list of kernel object pointers */
+@@ -93,6 +93,7 @@ struct thread
      data_size_t            desc_len;      /* thread description length in bytes */
      WCHAR                 *desc;          /* thread description string */
+     struct object         *locked_completion; /* completion port wait object successfully waited by the thread */
 +    struct timeout_user   *exit_poll;     /* poll if the thread/process has exited already */
  };
  
  extern struct thread *current;
--- 
-2.29.2
-
-- 
2.43.0

